household_id,client_primary_id,client_primary_first_name,client_primary_last_name,client_primary_dob,spouse_partner_id,spouse_first_name,spouse_last_name,spouse_dob,marital_status,dependents_count,dependents_ages,address_line1,address_city,address_state,address_zip,email_primary,phone_primary,advisor_name,last_review_date,next_review_date,as_of_date,risk_tolerance_1to5,time_horizon_years,investment_objective_primary,tax_filing_status,state_of_residence,federal_marginal_tax_rate_pct,state_tax_rate_pct,income_w2_annual,income_1099_annual,spouse_income_annual,other_income_annual,monthly_expenses_fixed,monthly_expenses_variable,savings_rate_pct,emergency_fund_target_months,goal_1_desc,goal_1_target_date,goal_1_target_amount,goal_1_priority_1to5,goal_2_desc,goal_2_target_date,goal_2_target_amount,goal_2_priority_1to5,goal_3_desc,goal_3_target_date,goal_3_target_amount,goal_3_priority_1to5,estate_docs_will_on_file,estate_docs_trust_type,estate_docs_last_updated,healthcare_proxy_on_file,powers_of_attorney_on_file,charitable_intent,record_level,sub_type,account_id,account_name,registration,tax_status,custodian,owner,beneficiary_primary,beneficiary_contingent,is_employer_sponsored,employer_name,employer_match_pct,employer_match_cap_pct,vesting_schedule,rmd_required,auto_contribution_amount,auto_contribution_frequency,account_contribution_ytd,account_contribution_annual_goal,position_type,symbol,cusip,description,asset_class,sector,currency,quantity,price,market_value,cost_basis_total,unrealized_gain_loss,expense_ratio_pct,yield_pct,coupon_pct,maturity_date,duration_years,risk_beta,risk_stddev_pct,property_address,property_type,property_est_value,property_purchase_price,property_purchase_date,liens,mortgage_lender,mortgage_balance,mortgage_rate_pct,mortgage_payment_monthly,mortgage_maturity_date,heloc_balance,insurance_policy_type,insurance_carrier,policy_number,face_amount,annual_premium,premium_mode,cash_surrender_value,policy_loan_balance,riders,annuity_type,annuity_income_start_date,annuity_income_amount,student_beneficiary_name,education_account_owner,education_goal_amount,education_target_year,equity_comp_plan_type,grant_id,grant_date,shares_granted,shares_vested,shares_unvested,strike_price,expiration_date,espp_discount_pct,espp_lookback,next_vest_date,debt_interest_rate_pct,debt_min_payment,debt_credit_limit,wallet_or_fund_name,althead_class,chain_or_vehicle,metric_name,metric_value,metric_period_label,notes
HH-1001,C-001,Alex,Rivera,1987-03-12,C-002,Taylor,Rivera,1989-07-30,Married,2.0,6;3,123 Main St,Cupertino,CA,95014.0,alex@example.com,+1-555-123-4567,"Jordan Smith, CFP®",2025-06-18,2026-06-17,2025-08-16,3.0,20.0,Growth with moderate volatility,Married filing jointly,CA,24.0,9.3,165000.0,0.0,98000.0,3000.0,5200.0,1800.0,18.0,6.0,College fund for both kids,2040-08-01,300000.0,5.0,Retire to Santa Barbara with $140k/yr after-tax,2052-03-01,4000000.0,5.0,Kitchen remodel,2027-09-01,80000.0,2.0,Yes,Revocable Living Trust,2024-05-01,Yes,Yes,Yes,Household,Profile,,,,,,,,,,,,,,,,,,,,,,,,,USD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Prefers ESG tilt; avoid energy equities.
HH-1001,C-001,Alex,Rivera,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Account,401k,A-401K-01,Vanguard 401(k),Individual,Tax-Deferred,Vanguard,Alex,Taylor Rivera|Spouse|100%,Kids|Children|Per Stirpes,Yes,TechCo Inc.,4.0,4.0,20%/yr over 5 yrs,No,1500.0,Monthly,9000.0,23000.0,,,,,,,USD,,,185000.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Catch-up eligible at age 50.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,A-401K-01,Vanguard 401(k),Individual,Tax-Deferred,Vanguard,Alex,,,,,,,,,,,,,Fund,VFIAX,922908363.0,Vanguard 500 Index Admiral,US Equity,,USD,320.5,450.1,144257.05,0.0,,0.04,1.3,,,,1.0,18.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Core index holding.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,RealEstate,PROP-01,Primary Residence,Joint,,,Alex & Taylor,,,,,,,,,,,,,RealEstate,,,Single-family home,Real Assets,,USD,1.0,,1650000.0,1200000.0,450000.0,,,,,,,,"123 Main St, Cupertino, CA 95014",Primary Residence,1650000.0,1150000.0,2019-08-15,First mortgage,FirstBank,820000.0,3.25,4100.0,2049-09-01,0.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Refi in 2021; extra principal payments quarterly.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,LifeInsurance,LIFE-01,IUL Policy - Alex,Individual,,Everly Life,Alex,Taylor Rivera|Spouse|100%,Kids|Children|Per Stirpes,,,,,,,500.0,Monthly,2500.0,6000.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,IUL,Everly Life,EL-123456,1000000.0,6000.0,Annual,45000.0,0.0,Child Term; Waiver of Premium,,,,,,,,,,,,,,,,,,,,,,,,,,,,Cap 9%; Floor 0%.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Education,529,EDU-529-01,CA 529 - Child 1,Owner: Alex | Beneficiary: Kid1,529,CA ScholarShare,Alex,Child 1|100%,Child 2|100% if unused,,,,,,,,,3000.0,5000.0,,,,,,,,,,42000.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rivera Child 1,Alex Rivera,150000.0,2042.0,,,,,,,,,,,,,,,,,,,,,Age-based aggressive track.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,EquityComp,RSU,EQ-001,TechCo RSU,Employee,Taxable at vest,Fidelity Stock Plan,Alex,,,,,,,,,,,,,,,,,,,,,,74100.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,RSU,RSU-2023-01,2023-06-15,1200.0,400.0,800.0,,,,,2025-12-15,,,,,,,,,,"Quarterly vesting, 25%/yr over 4 years."
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Liability,StudentLoan,SL-01,Fed Student Loan,Individual,,FedLoan,Alex,,,,,,,,,,,,,,,,,,,,,,38000.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,5.75,420.0,,,,,,,,On SAVE plan; considering PSLF eligibility check.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Crypto,CR-01,Coinbase Wallet,Individual,Taxable,Coinbase,Alex,,,,,,,,,,,,,,ETH,,,,,,6.2,3200.0,19840.0,11000.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Coinbase Wallet,Crypto,ETH mainnet,,,,Keep below 5% portfolio policy.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Metric,Planning,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Asset Allocation,Equity 68% | Bonds 18% | Real Assets 10% | Cash 4%,Q2-2025,Within IPS bands.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Metric,Planning,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Liquidity Ratio,3.2x monthly expenses,Q2-2025,Target ≥ 3x.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,A-401K-01,Vanguard 401(k),Individual,Tax-Deferred,Vanguard,Alex,,,,,,,,,,,,,Fund,VBTLX,,Vanguard Total Bond Market Index Admiral,US Bond,,USD,2222.3427,11.0,24445.77,,,0.05,2.8,,,6.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Core bond allocation
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,A-401K-01,Vanguard 401(k),Individual,Tax-Deferred,Vanguard,Alex,,,,,,,,,,,,,Fund,VTIAX,,Vanguard Total International Stock Index Admiral,Intl Equity,,USD,543.2393,30.0,16297.18,,,0.11,2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,International equity diversification
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Account,Brokerage,A-TAX-01,Fidelity Taxable,Joint,Taxable,Fidelity,Alex & Taylor,Transfer on Death|Kids|100%,,,,,,,,2000,Monthly,12000,24000,,,,,,,USD,,,245000,210000,35000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Direct indexing overlay planned.
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,A-TAX-01,Fidelity Taxable,Joint,Taxable,Fidelity,Alex & Taylor,,,,,,,,,,,,,ETF,VTI,,Vanguard Total Stock Market ETF,US Equity,,USD,600.0,240.0,144000,,,0.03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,A-TAX-01,Fidelity Taxable,Joint,Taxable,Fidelity,Alex & Taylor,,,,,,,,,,,,,ETF,VXUS,,Vanguard Total International Stock ETF,Intl Equity,,USD,400.0,60.0,24000,,,0.03,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,A-TAX-01,Fidelity Taxable,Joint,Taxable,Fidelity,Alex & Taylor,,,,,,,,,,,,,Stock,AAPL,,Apple Inc.,US Equity,,USD,150.0,220.0,33000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,A-TAX-01,Fidelity Taxable,Joint,Taxable,Fidelity,Alex & Taylor,,,,,,,,,,,,,ETF,BND,,Vanguard Total Bond Market ETF,US Bond,,USD,400.0,73.0,29200,,,0.035,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Cash,A-TAX-01,Fidelity Taxable,Joint,Taxable,Fidelity,Alex & Taylor,,,,,,,,,,,,,Cash,CASH,,Brokerage Cash Sweep,Cash,,USD,,,14800,,,,4.5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Sweep/MMF
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Account,Checking,BANK-CHK-01,Chase Checking,Joint,Taxable,Chase,Alex & Taylor,,,,,,,,,,,,,,,,,,,USD,,,12000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Operational cash
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Account,Savings,BANK-SAV-01,Ally High-Yield Savings,Joint,Taxable,Ally Bank,Alex & Taylor,,,,,,,,,,,,,,,,,,,USD,,,35000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Emergency fund
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Account,HSA,HSA-01,Fidelity HSA,Individual,Tax-Exempt,Fidelity,Alex,,,,,,,,,312.5,Monthly,1875,3750,,,,,,,USD,,,8000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,HSA eligible HDHP
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Account,Roth IRA,ROTH-01,Vanguard Roth IRA,Individual,Tax-Exempt,Vanguard,Alex,,,,,,,,,,,7000,7000,,,,,,,USD,,,60000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Maxing annual contribution
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,ROTH-01,Vanguard Roth IRA,Individual,Tax-Exempt,Vanguard,Alex,,,,,,,,,,,,,ETF,VTI,,Vanguard Total Stock Market ETF,US Equity,,USD,166.6667,240.0,40000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,Security,ROTH-01,Vanguard Roth IRA,Individual,Tax-Exempt,Vanguard,Alex,,,,,,,,,,,,,ETF,BND,,Vanguard Total Bond Market ETF,US Bond,,USD,273.9726,73.0,20000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Account,Pension,PEN-01,TechCo Defined Benefit Plan,Individual,Taxable,TechCo,Alex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Pension,2054-03-01,24000,,,,,,,,,,,,,,,,,,,,,,,,,Early retirement reduction applies if before 65
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Education,529,EDU-529-02,CA 529 - Child 2,Owner: Alex | Beneficiary: Kid2,529,CA ScholarShare,Alex,,,,,,,,,,,3000,5000,,,,,,,,,,26000,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Rivera Child 2,Alex Rivera,150000,2045,,,,,,,,,,,,,,,,,,,,,Age-based aggressive track
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,LifeInsurance,GRP-LIFE-01,Group Term Life - Alex,Employee,N/A,TechCo,Alex,Taylor Rivera|Spouse|100%,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,GroupTerm,TechCo,,330000,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Employer-paid 2x salary
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,LifeInsurance,DI-01,Long-Term Disability - Alex,Individual,N/A,Guardian,Alex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,DI,Guardian,,,1800,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"DI monthly benefit $6,000; 90-day elimination; to age 65"
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Position,LifeInsurance,LTC-01,Long-Term Care - Alex,Individual,N/A,Mutual of Omaha,Alex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,LTC,Mutual of Omaha,,,3200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"Benefit ~$180/day, 3-year term, 90-day elimination"
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,EquityComp,ESPP,EQ-ESPP-01,TechCo ESPP,Employee,Taxable at sale,Fidelity Stock Plan,Alex,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,ESPP,ESPP-2025-H1,2025-06-01,300,0,300,,,15.0,Yes,,,,,,,,,,,6-month purchase period; payroll deductions active
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Liability,CreditCard,CC-01,Chase Sapphire,Individual,N/A,Chase,Alex,,,,,,,,,,,,,,,,,,,,,,1200,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,22.99,75,20000,,,,,,,Pay in full monthly when possible
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Metric,Planning,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Asset Allocation,Real Assets 76.4% | Equity 18.6% | Bonds 3.4% | Alternatives 0.9% | Cash 0.7% | Other 0.0%,AsOf 2025-08-16,Computed from Positions only
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Metric,Planning,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Liquidity Ratio,8.8x monthly expenses,AsOf 2025-08-16,"Cash considered: $61,800; Expenses: $7,000/mo"
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Metric,Planning,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Net Worth,"$1,355,640",AsOf 2025-08-16,"Assets: $2,214,840; Liabilities: $859,200"
HH-1001,,,,,,,,,,,,,,,,,,,,,2025-08-16,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Metric,Planning,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Debt-to-Income (DTI),20.7%,AsOf 2025-08-16,"Min payments: $4,595/mo; Gross income: $22,167/mo"
